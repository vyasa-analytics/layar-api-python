# coding: utf-8

"""
    Layar API Documentation

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SourceDocumentExcludeSearchCommand(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'live_source_id': 'str',
        'live_source_ids': 'list[str]',
        'connector_id': 'str',
        'connector_ids': 'list[str]'
    }

    attribute_map = {
        'live_source_id': 'liveSourceId',
        'live_source_ids': 'liveSourceIds',
        'connector_id': 'connectorId',
        'connector_ids': 'connectorIds'
    }

    def __init__(self, live_source_id=None, live_source_ids=None, connector_id=None, connector_ids=None):  # noqa: E501
        """SourceDocumentExcludeSearchCommand - a model defined in Swagger"""  # noqa: E501
        self._live_source_id = None
        self._live_source_ids = None
        self._connector_id = None
        self._connector_ids = None
        self.discriminator = None
        if live_source_id is not None:
            self.live_source_id = live_source_id
        if live_source_ids is not None:
            self.live_source_ids = live_source_ids
        if connector_id is not None:
            self.connector_id = connector_id
        if connector_ids is not None:
            self.connector_ids = connector_ids

    @property
    def live_source_id(self):
        """Gets the live_source_id of this SourceDocumentExcludeSearchCommand.  # noqa: E501


        :return: The live_source_id of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :rtype: str
        """
        return self._live_source_id

    @live_source_id.setter
    def live_source_id(self, live_source_id):
        """Sets the live_source_id of this SourceDocumentExcludeSearchCommand.


        :param live_source_id: The live_source_id of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :type: str
        """

        self._live_source_id = live_source_id

    @property
    def live_source_ids(self):
        """Gets the live_source_ids of this SourceDocumentExcludeSearchCommand.  # noqa: E501


        :return: The live_source_ids of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :rtype: list[str]
        """
        return self._live_source_ids

    @live_source_ids.setter
    def live_source_ids(self, live_source_ids):
        """Sets the live_source_ids of this SourceDocumentExcludeSearchCommand.


        :param live_source_ids: The live_source_ids of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :type: list[str]
        """

        self._live_source_ids = live_source_ids

    @property
    def connector_id(self):
        """Gets the connector_id of this SourceDocumentExcludeSearchCommand.  # noqa: E501


        :return: The connector_id of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :rtype: str
        """
        return self._connector_id

    @connector_id.setter
    def connector_id(self, connector_id):
        """Sets the connector_id of this SourceDocumentExcludeSearchCommand.


        :param connector_id: The connector_id of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :type: str
        """

        self._connector_id = connector_id

    @property
    def connector_ids(self):
        """Gets the connector_ids of this SourceDocumentExcludeSearchCommand.  # noqa: E501


        :return: The connector_ids of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :rtype: list[str]
        """
        return self._connector_ids

    @connector_ids.setter
    def connector_ids(self, connector_ids):
        """Sets the connector_ids of this SourceDocumentExcludeSearchCommand.


        :param connector_ids: The connector_ids of this SourceDocumentExcludeSearchCommand.  # noqa: E501
        :type: list[str]
        """

        self._connector_ids = connector_ids

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SourceDocumentExcludeSearchCommand, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SourceDocumentExcludeSearchCommand):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
