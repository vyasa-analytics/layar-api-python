# coding: utf-8

"""
    Layar API Documentation

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import layar_api
from layar_api.api.source_document_api import SourceDocumentApi  # noqa: E501
from layar_api.rest import ApiException


class TestSourceDocumentApi(unittest.TestCase):
    """SourceDocumentApi unit test stubs"""

    def setUp(self):
        self.api = SourceDocumentApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_annotation(self):
        """Test case for add_annotation

        bySource  # noqa: E501
        """
        pass

    def test_add_annotations(self):
        """Test case for add_annotations

        bySource  # noqa: E501
        """
        pass

    def test_add_column(self):
        """Test case for add_column

        addColumn  # noqa: E501
        """
        pass

    def test_add_viewer(self):
        """Test case for add_viewer

        add a viewer to the source document  # noqa: E501
        """
        pass

    def test_create(self):
        """Test case for create

        save  # noqa: E501
        """
        pass

    def test_delete(self):
        """Test case for delete

        delete  # noqa: E501
        """
        pass

    def test_delete_many(self):
        """Test case for delete_many

        deleteMany  # noqa: E501
        """
        pass

    def test_download(self):
        """Test case for download

        download  # noqa: E501
        """
        pass

    def test_download_annotations(self):
        """Test case for download_annotations

        downloads annotations as csv of one or more source document  # noqa: E501
        """
        pass

    def test_extract_table_by_page(self):
        """Test case for extract_table_by_page

        extract a table from a specific page  # noqa: E501
        """
        pass

    def test_extract_tables(self):
        """Test case for extract_tables

        extract tables from a document  # noqa: E501
        """
        pass

    def test_get(self):
        """Test case for get

        source document details  # noqa: E501
        """
        pass

    def test_get_concepts(self):
        """Test case for get_concepts

        count concepts by source document  # noqa: E501
        """
        pass

    def test_get_counts_by_suggested_category(self):
        """Test case for get_counts_by_suggested_category

        countBySuggestedCategory  # noqa: E501
        """
        pass

    def test_get_counts_by_type(self):
        """Test case for get_counts_by_type

        countByType  # noqa: E501
        """
        pass

    def test_get_counts_over_time(self):
        """Test case for get_counts_over_time

        doc counts over time for term  # noqa: E501
        """
        pass

    def test_get_field_counts(self):
        """Test case for get_field_counts

        """
        pass

    def test_get_page_preview(self):
        """Test case for get_page_preview

        preview of a specific page  # noqa: E501
        """
        pass

    def test_get_preview(self):
        """Test case for get_preview

        preview  # noqa: E501
        """
        pass

    def test_get_statement_counts(self):
        """Test case for get_statement_counts

        get statement counts  # noqa: E501
        """
        pass

    def test_get_statements(self):
        """Test case for get_statements

        bySource  # noqa: E501
        """
        pass

    def test_get_status(self):
        """Test case for get_status

        status  # noqa: E501
        """
        pass

    def test_get_viewers(self):
        """Test case for get_viewers

        get a list of all viewers of the source document  # noqa: E501
        """
        pass

    def test_render_pdf(self):
        """Test case for render_pdf

        renderPdf  # noqa: E501
        """
        pass

    def test_search(self):
        """Test case for search

        """
        pass

    def test_update(self):
        """Test case for update

        update  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
